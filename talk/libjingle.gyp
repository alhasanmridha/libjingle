#
# libjingle
# Copyright 2012, Google Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#  3. The name of the author may not be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

{
  'includes': ['build/common.gypi'],

  'conditions': [
    ['os_posix == 1 and OS != "mac" and OS != "ios"', {
     'conditions': [
       ['sysroot!=""', {
         'variables': {
           'pkg-config': '../../../build/linux/pkg-config-wrapper "<(sysroot)" "<(target_arch)"',
         },
       }, {
         'variables': {
           'pkg-config': 'pkg-config'
         },
       }],
     ],
    }],

    ['OS=="linux" or OS=="android"', {
      'targets': [
        {
          'target_name': 'libjingle_peerconnection_so',
          'type': 'loadable_module',
          'dependencies': [
            'libjingle_peerconnection',
            '<(DEPTH)/third_party/icu/icu.gyp:icuuc',
          ],
          'sources': [
            'app/webrtc/java/jni/peerconnection_jni.cc'
          ],
          'conditions': [
            ['OS=="linux"', {
              'defines': [
                'HAVE_GTK',
              ],
              'include_dirs': [
                '<(java_home)/include',
                '<(java_home)/include/linux',
              ],
              'link_settings': {
                'libraries': [
                  '<!@(pkg-config --libs-only-l gobject-2.0 gthread-2.0'
                      ' gtk+-2.0)',
                ],
              },
            }],
          ],
        },
        {
          'target_name': 'libjingle_peerconnection_jar',
          'type': 'none',
          'actions': [
            {
              'variables': {
                'java_src_dir': 'app/webrtc/java/src',
                'webrtc_modules_dir': '<(webrtc_root)/modules',
                'peerconnection_java_files': [
                  'app/webrtc/java/src/org/webrtc/AudioSource.java',
                  'app/webrtc/java/src/org/webrtc/AudioTrack.java',
                  'app/webrtc/java/src/org/webrtc/DataChannel.java',
                  'app/webrtc/java/src/org/webrtc/IceCandidate.java',
                  'app/webrtc/java/src/org/webrtc/MediaConstraints.java',
                  'app/webrtc/java/src/org/webrtc/MediaSource.java',
                  'app/webrtc/java/src/org/webrtc/MediaStream.java',
                  'app/webrtc/java/src/org/webrtc/MediaStreamTrack.java',
                  'app/webrtc/java/src/org/webrtc/PeerConnectionFactory.java',
                  'app/webrtc/java/src/org/webrtc/PeerConnection.java',
                  'app/webrtc/java/src/org/webrtc/SdpObserver.java',
                  'app/webrtc/java/src/org/webrtc/StatsObserver.java',
                  'app/webrtc/java/src/org/webrtc/StatsReport.java',
                  'app/webrtc/java/src/org/webrtc/SessionDescription.java',
                  'app/webrtc/java/src/org/webrtc/VideoCapturer.java',
                  'app/webrtc/java/src/org/webrtc/VideoRenderer.java',
                  'app/webrtc/java/src/org/webrtc/VideoSource.java',
                  'app/webrtc/java/src/org/webrtc/VideoTrack.java',
                ],
                # TODO(fischman): extract this into a webrtc gyp var that can be
                # included here, or better yet, build a proper .jar in webrtc
                # and include it here.
                'android_java_files': [
                  '<(webrtc_modules_dir)/audio_device/android/java/src/org/webrtc/voiceengine/WebRTCAudioDevice.java',
                  '<(webrtc_modules_dir)/video_capture/android/java/src/org/webrtc/videoengine/CaptureCapabilityAndroid.java',
                  '<(webrtc_modules_dir)/video_capture/android/java/src/org/webrtc/videoengine/VideoCaptureAndroid.java',
                  '<(webrtc_modules_dir)/video_capture/android/java/src/org/webrtc/videoengine/VideoCaptureDeviceInfoAndroid.java',
                  '<(webrtc_modules_dir)/video_render/android/java/src/org/webrtc/videoengine/ViEAndroidGLES20.java',
                  '<(webrtc_modules_dir)/video_render/android/java/src/org/webrtc/videoengine/ViERenderer.java',
                  '<(webrtc_modules_dir)/video_render/android/java/src/org/webrtc/videoengine/ViESurfaceRenderer.java',
                ],
              },
              'action_name': 'create_jar',
              'inputs': [
                'build/build_jar.sh',
                '<@(java_files)',
              ],
              'outputs': [
                '<(PRODUCT_DIR)/libjingle_peerconnection.jar',
              ],
              'conditions': [
                ['OS=="android"', {
                  'variables': {
                    'java_files': ['<@(peerconnection_java_files)', '<@(android_java_files)'],
                    'build_classpath': '<(java_src_dir):<(DEPTH)/third_party/android_tools/sdk/platforms/android-<(android_sdk_version)/android.jar',
                  },
                }, {
                  'variables': {
                    'java_files': ['<@(peerconnection_java_files)'],
                    'build_classpath': '<(java_src_dir)',
                  },
                }],
              ],
              'action': [
                'build/build_jar.sh', '<(java_home)', '<@(_outputs)',
                '<(INTERMEDIATE_DIR)',
                '<(build_classpath)',
                '<@(java_files)'
              ],
            },
          ],
          'dependencies': [
            'libjingle_peerconnection_so',
          ],
        },
      ],
    }],
    ['libjingle_objc == 1', {
      'targets': [
        {
          'target_name': 'libjingle_peerconnection_objc',
          'type': 'static_library',
          'dependencies': [
            'libjingle_peerconnection',
          ],
          'sources': [
            'app/webrtc/objc/RTCAudioTrack+Internal.h',
            'app/webrtc/objc/RTCAudioTrack.mm',
            'app/webrtc/objc/RTCEnumConverter.h',
            'app/webrtc/objc/RTCEnumConverter.mm',
            'app/webrtc/objc/RTCI420Frame.mm',
            'app/webrtc/objc/RTCIceCandidate+Internal.h',
            'app/webrtc/objc/RTCIceCandidate.mm',
            'app/webrtc/objc/RTCIceServer+Internal.h',
            'app/webrtc/objc/RTCIceServer.mm',
            'app/webrtc/objc/RTCMediaConstraints+Internal.h',
            'app/webrtc/objc/RTCMediaConstraints.mm',
            'app/webrtc/objc/RTCMediaConstraintsNative.cc',
            'app/webrtc/objc/RTCMediaConstraintsNative.h',
            'app/webrtc/objc/RTCMediaSource+Internal.h',
            'app/webrtc/objc/RTCMediaSource.mm',
            'app/webrtc/objc/RTCMediaStream+Internal.h',
            'app/webrtc/objc/RTCMediaStream.mm',
            'app/webrtc/objc/RTCMediaStreamTrack+Internal.h',
            'app/webrtc/objc/RTCMediaStreamTrack.mm',
            'app/webrtc/objc/RTCPair.m',
            'app/webrtc/objc/RTCPeerConnection+Internal.h',
            'app/webrtc/objc/RTCPeerConnection.mm',
            'app/webrtc/objc/RTCPeerConnectionFactory.mm',
            'app/webrtc/objc/RTCPeerConnectionObserver.h',
            'app/webrtc/objc/RTCPeerConnectionObserver.mm',
            'app/webrtc/objc/RTCSessionDescription+Internal.h',
            'app/webrtc/objc/RTCSessionDescription.mm',
            'app/webrtc/objc/RTCVideoCapturer+Internal.h',
            'app/webrtc/objc/RTCVideoCapturer.mm',
            'app/webrtc/objc/RTCVideoRenderer+Internal.h',
            'app/webrtc/objc/RTCVideoRenderer.mm',
            'app/webrtc/objc/RTCVideoSource+Internal.h',
            'app/webrtc/objc/RTCVideoSource.mm',
            'app/webrtc/objc/RTCVideoTrack+Internal.h',
            'app/webrtc/objc/RTCVideoTrack.mm',
            'app/webrtc/objc/public/RTCAudioSource.h',
            'app/webrtc/objc/public/RTCAudioTrack.h',
            'app/webrtc/objc/public/RTCI420Frame.h',
            'app/webrtc/objc/public/RTCIceCandidate.h',
            'app/webrtc/objc/public/RTCIceServer.h',
            'app/webrtc/objc/public/RTCMediaConstraints.h',
            'app/webrtc/objc/public/RTCMediaSource.h',
            'app/webrtc/objc/public/RTCMediaStream.h',
            'app/webrtc/objc/public/RTCMediaStreamTrack.h',
            'app/webrtc/objc/public/RTCPair.h',
            'app/webrtc/objc/public/RTCPeerConnection.h',
            'app/webrtc/objc/public/RTCPeerConnectionDelegate.h',
            'app/webrtc/objc/public/RTCPeerConnectionFactory.h',
            'app/webrtc/objc/public/RTCSessionDescription.h',
            'app/webrtc/objc/public/RTCSessionDescriptonDelegate.h',
            'app/webrtc/objc/public/RTCTypes.h',
            'app/webrtc/objc/public/RTCVideoCapturer.h',
            'app/webrtc/objc/public/RTCVideoRenderer.h',
            'app/webrtc/objc/public/RTCVideoRendererDelegate.h',
            'app/webrtc/objc/public/RTCVideoSource.h',
            'app/webrtc/objc/public/RTCVideoTrack.h',
          ],
          'include_dirs': [
            '<(DEPTH)/talk/app/webrtc',
            '<(DEPTH)/talk/app/webrtc/objc',
            '<(DEPTH)/talk/app/webrtc/objc/public',
          ],
          'link_settings': {
            'libraries': [
              '$(SDKROOT)/System/Library/Frameworks/Foundation.framework',
            ],
          },
          'xcode_settings': {
            'CLANG_ENABLE_OBJC_ARC': 'YES',
            'CLANG_WARN_OBJC_MISSING_PROPERTY_SYNTHESIS': 'NO',
            'CLANG_LINK_OBJC_RUNTIME': 'YES',
          },
        }
      ]
    }],
  ],

  'targets': [
    {
      'target_name': 'libjingle',
      'type': 'static_library',
      'dependencies': [
        '<(DEPTH)/third_party/expat/expat.gyp:expat',
        '<(DEPTH)/third_party/jsoncpp/jsoncpp.gyp:jsoncpp',
      ],
      'export_dependent_settings': [
        '<(DEPTH)/third_party/expat/expat.gyp:expat',
        '<(DEPTH)/third_party/jsoncpp/jsoncpp.gyp:jsoncpp',
      ],
      'sources': [
        'asyncfile.cc',
        'asyncfile.h',
        'asynchttprequest.cc',
        'asynchttprequest.h',
        'asyncpacketsocket.h',
        'asyncsocket.cc',
        'asyncsocket.h',
        'asynctcpsocket.cc',
        'asynctcpsocket.h',
        'asyncudpsocket.cc',
        'asyncudpsocket.h',
        'atomicops.h',
        'autodetectproxy.cc',
        'autodetectproxy.h',
        'bandwidthsmoother.cc',
        'bandwidthsmoother.h',
        'base64.cc',
        'base64.h',
        'basicdefs.h',
        'basictypes.h',
        'bind.h',
        'buffer.h',
        'bytebuffer.cc',
        'bytebuffer.h',
        'byteorder.h',
        'checks.cc',
        'checks.h',
        'common.cc',
        'common.h',
        'constructormagic.h',
        'cpumonitor.cc',
        'cpumonitor.h',
        'crc32.cc',
        'crc32.h',
        'criticalsection.h',
        'cryptstring.h',
        'diskcache.cc',
        'diskcache.h',
        'event.cc',
        'event.h',
        'filelock.cc',
        'filelock.h',
        'fileutils.cc',
        'fileutils.h',
        'fileutils_mock.h',
        'firewallsocketserver.cc',
        'firewallsocketserver.h',
        'flags.cc',
        'flags.h',
        'gunit_prod.h',
        'helpers.cc',
        'helpers.h',
        'host.cc',
        'host.h',
        'httpbase.cc',
        'httpbase.h',
        'httpclient.cc',
        'httpclient.h',
        'httpcommon-inl.h',
        'httpcommon.cc',
        'httpcommon.h',
        'httprequest.cc',
        'httprequest.h',
        'httpserver.cc',
        'httpserver.h',
        'ifaddrs-android.cc',
        'ifaddrs-android.h',
        'ipaddress.cc',
        'ipaddress.h',
        'json.cc',
        'json.h',
        'linked_ptr.h',
        'linuxfdwalk.h',
        'logging.cc',
        'logging.h',
        'maccocoathreadhelper.h',
        'maccocoathreadhelper.mm',
        'mathutils.h',
        'md5.cc',
        'md5.h',
        'md5digest.h',
        'messagedigest.cc',
        'messagedigest.h',
        'messagehandler.cc',
        'messagehandler.h',
        'messagequeue.cc',
        'messagequeue.h',
        'multipart.cc',
        'multipart.h',
        'natserver.cc',
        'natserver.h',
        'natsocketfactory.cc',
        'natsocketfactory.h',
        'nattypes.cc',
        'nattypes.h',
        'nethelpers.cc',
        'nethelpers.h',
        'network.cc',
        'network.h',
        'nssidentity.cc',
        'nssidentity.h',
        'nssstreamadapter.cc',
        'nssstreamadapter.h',
        'nullsocketserver.h',
        'optionsfile.cc',
        'optionsfile.h',
        'pathutils.cc',
        'pathutils.h',
        'physicalsocketserver.cc',
        'physicalsocketserver.h',
        'profiler.cc',
        'profiler.h',
        'proxydetect.cc',
        'proxydetect.h',
        'proxyinfo.cc',
        'proxyinfo.h',
        'proxyserver.cc',
        'proxyserver.h',
        'ratelimiter.cc',
        'ratelimiter.h',
        'ratetracker.cc',
        'ratetracker.h',
        'refcount.h',
        'referencecountedsingletonfactory.h',
        'rollingaccumulator.h',
        'scoped_autorelease_pool.h',
        'scoped_ptr.h',
        'scoped_ref_ptr.h',
        'sec_buffer.h',
        'sha1.cc',
        'sha1.h',
        'sha1digest.h',
        'sharedexclusivelock.cc',
        'sharedexclusivelock.h',
        'signalthread.cc',
        'signalthread.h',
        'sigslot.h',
        'sigslotrepeater.h',
        'socket.h',
        'socketadapters.cc',
        'socketadapters.h',
        'socketaddress.cc',
        'socketaddress.h',
        'socketaddresspair.cc',
        'socketaddresspair.h',
        'socketfactory.h',
        'socketpool.cc',
        'socketpool.h',
        'socketserver.h',
        'socketstream.cc',
        'socketstream.h',
        'ssladapter.cc',
        'ssladapter.h',
        'sslconfig.h',
        'sslfingerprint.h',
        'sslidentity.cc',
        'sslidentity.h',
        'sslroots.h',
        'sslsocketfactory.cc',
        'sslsocketfactory.h',
        'sslstreamadapter.cc',
        'sslstreamadapter.h',
        'sslstreamadapterhelper.cc',
        'sslstreamadapterhelper.h',
        'stream.cc',
        'stream.h',
        'stringdigest.h',
        'stringencode.cc',
        'stringencode.h',
        'stringutils.cc',
        'stringutils.h',
        'systeminfo.cc',
        'systeminfo.h',
        'task.cc',
        'task.h',
        'taskparent.cc',
        'taskparent.h',
        'taskrunner.cc',
        'taskrunner.h',
        'testclient.cc',
        'testclient.h',
        'thread.cc',
        'thread.h',
        'timeutils.cc',
        'timeutils.h',
        'timing.cc',
        'timing.h',
        'transformadapter.cc',
        'transformadapter.h',
        'urlencode.cc',
        'urlencode.h',
        'versionparsing.cc',
        'versionparsing.h',
        'virtualsocketserver.cc',
        'virtualsocketserver.h',
        'window.h',
        'windowpicker.h',
        'windowpickerfactory.h',
        'worker.cc',
        'worker.h',
        'xmllite/qname.cc',
        'xmllite/qname.h',
        'xmllite/xmlbuilder.cc',
        'xmllite/xmlbuilder.h',
        'xmllite/xmlconstants.cc',
        'xmllite/xmlconstants.h',
        'xmllite/xmlelement.cc',
        'xmllite/xmlelement.h',
        'xmllite/xmlnsstack.cc',
        'xmllite/xmlnsstack.h',
        'xmllite/xmlparser.cc',
        'xmllite/xmlparser.h',
        'xmllite/xmlprinter.cc',
        'xmllite/xmlprinter.h',
        'xmpp/asyncsocket.h',
        'xmpp/chatroommodule.h',
        'xmpp/chatroommoduleimpl.cc',
        'xmpp/constants.cc',
        'xmpp/constants.h',
        'xmpp/discoitemsquerytask.cc',
        'xmpp/discoitemsquerytask.h',
        'xmpp/hangoutpubsubclient.cc',
        'xmpp/hangoutpubsubclient.h',
        'xmpp/iqtask.cc',
        'xmpp/iqtask.h',
        'xmpp/jid.cc',
        'xmpp/jid.h',
        'xmpp/module.h',
        'xmpp/moduleimpl.cc',
        'xmpp/moduleimpl.h',
        'xmpp/mucroomconfigtask.cc',
        'xmpp/mucroomconfigtask.h',
        'xmpp/mucroomdiscoverytask.cc',
        'xmpp/mucroomdiscoverytask.h',
        'xmpp/mucroomlookuptask.cc',
        'xmpp/mucroomlookuptask.h',
        'xmpp/mucroomuniquehangoutidtask.cc',
        'xmpp/mucroomuniquehangoutidtask.h',
        'xmpp/pingtask.cc',
        'xmpp/pingtask.h',
        'xmpp/plainsaslhandler.h',
        'xmpp/presenceouttask.cc',
        'xmpp/presenceouttask.h',
        'xmpp/presencereceivetask.cc',
        'xmpp/presencereceivetask.h',
        'xmpp/presencestatus.cc',
        'xmpp/presencestatus.h',
        'xmpp/prexmppauth.h',
        'xmpp/pubsub_task.cc',
        'xmpp/pubsub_task.h',
        'xmpp/pubsubclient.cc',
        'xmpp/pubsubclient.h',
        'xmpp/pubsubtasks.cc',
        'xmpp/pubsubtasks.h',
        'xmpp/receivetask.cc',
        'xmpp/receivetask.h',
        'xmpp/rostermodule.h',
        'xmpp/rostermoduleimpl.cc',
        'xmpp/rostermoduleimpl.h',
        'xmpp/saslcookiemechanism.h',
        'xmpp/saslhandler.h',
        'xmpp/saslmechanism.cc',
        'xmpp/saslmechanism.h',
        'xmpp/saslplainmechanism.h',
        'xmpp/xmppauth.cc',
        'xmpp/xmppauth.h',
        'xmpp/xmppclient.cc',
        'xmpp/xmppclient.h',
        'xmpp/xmppclientsettings.h',
        'xmpp/xmppengine.h',
        'xmpp/xmppengineimpl.cc',
        'xmpp/xmppengineimpl.h',
        'xmpp/xmppengineimpl_iq.cc',
        'xmpp/xmpplogintask.cc',
        'xmpp/xmpplogintask.h',
        'xmpp/xmpppump.cc',
        'xmpp/xmpppump.h',
        'xmpp/xmppsocket.cc',
        'xmpp/xmppsocket.h',
        'xmpp/xmppstanzaparser.cc',
        'xmpp/xmppstanzaparser.h',
        'xmpp/xmpptask.cc',
        'xmpp/xmpptask.h',
        'xmpp/xmppthread.cc',
        'xmpp/xmppthread.h',
      ],
      'conditions': [
        ['OS=="mac" or OS=="ios" or OS=="win"', {
          'dependencies': [
            # The chromium copy of nss should NOT be used on platforms that
            # have NSS as system libraries, such as linux.
            '<(DEPTH)/third_party/nss/nss.gyp:nss',
          ],
        }],
        ['OS=="android"', {
          'sources': [
            'ifaddrs-android.cc',
          ],
          'link_settings': {
            'libraries': [
              '-llog',
              '-lGLESv2',
            ],
          },
        }],
        ['OS=="linux" or OS=="android"', {
          'sources': [
            'linux.cc',
            'linux.h',
          ],
        }],
        ['OS=="linux"', {
          'sources': [
            'dbus.cc',
            'dbus.h',
            'libdbusglibsymboltable.cc',
            'libdbusglibsymboltable.h',
            'linuxfdwalk.c',
            'linuxwindowpicker.cc',
            'linuxwindowpicker.h',
          ],
          'link_settings': {
            'libraries': [
              '-lcrypto',
              '-ldl',
              '-lrt',
              '-lssl',
              '-lXext',
              '-lX11',
              '-lXcomposite',
              '-lXrender',
              '<!@(<(pkg-config) --libs-only-l nss | sed -e "s/-lssl3//")',
            ],
          },
          'cflags': [
            '<!@(<(pkg-config) --cflags nss)',
          ],
          'ldflags': [
            '<!@(<(pkg-config) --libs-only-L --libs-only-other nss)',
          ],
        }],
        ['OS=="mac"', {
          'conditions': [
            ['libjingle_objc != 1', {
              'link_settings' :{
                'xcode_settings': {
                  'OTHER_LDFLAGS': [
                    '-framework Carbon',
                  ],
                },
              },
            }],
          ],
          'sources': [
            'macasyncsocket.cc',
            'macasyncsocket.h',
            'maccocoasocketserver.h',
            'maccocoasocketserver.mm',
            'macconversion.cc',
            'macconversion.h',
            'macsocketserver.cc',
            'macsocketserver.h',
            'macutils.cc',
            'macutils.h',
            'macwindowpicker.cc',
            'macwindowpicker.h',
            'scoped_autorelease_pool.mm',
          ],
          'link_settings': {
            'libraries': [
             '$(SDKROOT)/usr/lib/libcrypto.dylib',
             '$(SDKROOT)/usr/lib/libssl.dylib',
            ],
            'xcode_settings': {
              'OTHER_LDFLAGS': [
                '-framework Cocoa',
                '-framework IOKit',
                '-framework Security',
                '-framework SystemConfiguration',
              ],
            },
          },
        }],
        ['OS=="ios"', {
          # 'dependencies': [
          #   '<(DEPTH)/third_party/openssl/openssl.gyp:openssl',
          # ],
          # 'include_dirs': [
          #   '<(DEPTH)/third_party/openssl/openssl/include',
          # ],
          'sources': [
            'scoped_autorelease_pool.mm',
          ],
          'xcode_settings': {
            'OTHER_LDFLAGS': [
              '-framework IOKit',
              '-framework Security',
              '-framework SystemConfiguration',
              '-framework UIKit',
            ],
          },
          'defines': [
	    'SSL_USE_NSS',
          ],
        }],
        ['OS=="win"', {
          'sources': [
            'diskcache_win32.cc',
            'diskcache_win32.h',
            'schanneladapter.cc',
            'schanneladapter.h',
            'win32.cc',
            'win32.h',
            'win32filesystem.cc',
            'win32filesystem.h',
            'win32regkey.cc',
            'win32regkey.h',
            'win32securityerrors.cc',
            'win32socketinit.cc',
            'win32socketinit.h',
            'win32socketserver.cc',
            'win32socketserver.h',
            'win32window.cc',
            'win32window.h',
            'win32windowpicker.cc',
            'win32windowpicker.h',
            'winfirewall.cc',
            'winfirewall.h',
            'winping.cc',
            'winping.h',
          ],
          'link_settings': {
            'libraries': [
              '-lcrypt32.lib',
              '-liphlpapi.lib',
              '-lsecur32.lib',
            ],
          },
          # Suppress warnings about WIN32_LEAN_AND_MEAN.
          'msvs_disabled_warnings': [4005],
        }],
        ['os_posix==1', {
          'sources': [
            'latebindingsymboltable.cc',
            'latebindingsymboltable.h',
            'posix.cc',
            'posix.h',
            'unixfilesystem.cc',
            'unixfilesystem.h',
          ],
          'conditions': [
            ['OS=="linux" or OS=="android"', {
              'dependencies': [
                '<(DEPTH)/third_party/openssl/openssl.gyp:openssl',
              ],
            }],
            ['OS!="ios"', {
              'sources': [
                'openssladapter.cc',
                'openssladapter.h',
                'openssldigest.cc',
                'openssldigest.h',
                'opensslidentity.cc',
                'opensslidentity.h',
                'opensslstreamadapter.cc',
                'opensslstreamadapter.h',
              ],
            }],
          ],
        }],
      ],  # conditions
    },  # target libjingle
    {
      'target_name': 'libjingle_sound',
      'type': 'static_library',
      'dependencies': [
        'libjingle',
      ],
      'sources': [
        'sound/automaticallychosensoundsystem.h',
        'sound/nullsoundsystem.cc',
        'sound/nullsoundsystem.h',
        'sound/nullsoundsystemfactory.cc',
        'sound/nullsoundsystemfactory.h',
        'sound/platformsoundsystem.cc',
        'sound/platformsoundsystem.h',
        'sound/platformsoundsystemfactory.cc',
        'sound/platformsoundsystemfactory.h',
        'sound/sounddevicelocator.h',
        'sound/soundinputstreaminterface.h',
        'sound/soundoutputstreaminterface.h',
        'sound/soundsystemfactory.h',
        'sound/soundsysteminterface.cc',
        'sound/soundsysteminterface.h',
        'sound/soundsystemproxy.cc',
        'sound/soundsystemproxy.h',
      ],
      'conditions': [
        ['OS=="linux"', {
          'sources': [
            'sound/alsasoundsystem.cc',
            'sound/alsasoundsystem.h',
            'sound/alsasymboltable.cc',
            'sound/alsasymboltable.h',
            'sound/linuxsoundsystem.cc',
            'sound/linuxsoundsystem.h',
            'sound/pulseaudiosoundsystem.cc',
            'sound/pulseaudiosoundsystem.h',
            'sound/pulseaudiosymboltable.cc',
            'sound/pulseaudiosymboltable.h',
          ],
        }],
      ],
    },  # target libjingle_sound
    {
      'target_name': 'libjingle_media',
      'type': 'static_library',
      'dependencies': [
        '<(DEPTH)/third_party/libyuv/libyuv.gyp:libyuv',
        '<(webrtc_root)/modules/modules.gyp:video_capture_module',
        '<(webrtc_root)/modules/modules.gyp:video_render_module',
        '<(webrtc_root)/video_engine/video_engine.gyp:video_engine_core',
        '<(webrtc_root)/voice_engine/voice_engine.gyp:voice_engine',
        '<(webrtc_root)/system_wrappers/source/system_wrappers.gyp:system_wrappers',
        'libjingle',
        'libjingle_sound',
      ],
      'direct_dependent_settings': {
        'include_dirs': [
          '<(DEPTH)/third_party/libyuv/include',
        ],
      },
      'sources': [
        'media/audioframe.h',
        'media/audiorenderer.h',
        'media/capturemanager.cc',
        'media/capturemanager.h',
        'media/capturerenderadapter.cc',
        'media/capturerenderadapter.h',
        'media/codec.cc',
        'media/codec.h',
        'media/constants.cc',
        'media/constants.h',
        'media/cpuid.cc',
        'media/cpuid.h',
        'media/cryptoparams.h',
        'media/filemediaengine.cc',
        'media/filemediaengine.h',
        'media/hybriddataengine.h',
        'media/hybridvideoengine.cc',
        'media/hybridvideoengine.h',
        'media/mediachannel.h',
        'media/mediacommon.h',
        'media/mediaengine.cc',
        'media/mediaengine.h',
        'media/mutedvideocapturer.cc',
        'media/mutedvideocapturer.h',
        'media/rtpdataengine.cc',
        'media/rtpdataengine.h',
        'media/rtpdump.cc',
        'media/rtpdump.h',
        'media/rtputils.cc',
        'media/rtputils.h',
        'media/screencastid.h',
        'media/streamparams.cc',
        'media/streamparams.h',
        'media/videoadapter.cc',
        'media/videoadapter.h',
        'media/videocapturer.cc',
        'media/videocapturer.h',
        'media/videocommon.cc',
        'media/videocommon.h',
        'media/videoframe.cc',
        'media/videoframe.h',
        'media/videoprocessor.h',
        'media/videorenderer.h',
        'media/voiceprocessor.h',
        'media/devices/deviceinfo.h',
        'media/devices/devicemanager.cc',
        'media/devices/devicemanager.h',
        'media/devices/dummydevicemanager.h',
        'media/devices/filevideocapturer.cc',
        'media/devices/filevideocapturer.h',
        'media/devices/videorendererfactory.h',
        'media/other/linphonemediaengine.h',
        # TODO(ronghuawu): Enable when SCTP is ready.
        # 'media/sctp/sctpdataengine.cc',
        # 'media/sctp/sctpdataengine.h',
        'media/webrtc/webrtccommon.h',
        'media/webrtc/webrtcexport.h',
        'media/webrtc/webrtcmediaengine.h',
        'media/webrtc/webrtcpassthroughrender.cc',
        'media/webrtc/webrtcpassthroughrender.h',
        'media/webrtc/webrtcvideocapturer.cc',
        'media/webrtc/webrtcvideocapturer.h',
        'media/webrtc/webrtcvideodecoderfactory.h',
        'media/webrtc/webrtcvideoencoderfactory.h',
        'media/webrtc/webrtcvideoengine.cc',
        'media/webrtc/webrtcvideoengine.h',
        'media/webrtc/webrtcvideoframe.cc',
        'media/webrtc/webrtcvideoframe.h',
        'media/webrtc/webrtcvie.h',
        'media/webrtc/webrtcvoe.h',
        'media/webrtc/webrtcvoiceengine.cc',
        'media/webrtc/webrtcvoiceengine.h',
      ],
      'conditions': [
        ['OS=="linux"', {
          'sources': [
            'media/devices/gtkvideorenderer.cc',
            'media/devices/gtkvideorenderer.h',
            'media/devices/libudevsymboltable.cc',
            'media/devices/libudevsymboltable.h',
            'media/devices/linuxdeviceinfo.cc',
            'media/devices/linuxdevicemanager.cc',
            'media/devices/linuxdevicemanager.h',
            'media/devices/v4llookup.cc',
            'media/devices/v4llookup.h',
          ],
          'include_dirs': [
            'third_party/libudev'
          ],
          'cflags': [
            '<!@(pkg-config --cflags gobject-2.0 gthread-2.0 gtk+-2.0)',
          ],
          'libraries': [
            '-lrt',
            '-lXext',
            '-lX11',
          ],
        }],
        ['OS=="win"', {
          'sources': [
            'media/devices/gdivideorenderer.cc',
            'media/devices/gdivideorenderer.h',
            'media/devices/win32deviceinfo.cc',
            'media/devices/win32devicemanager.cc',
            'media/devices/win32devicemanager.h',
          ],
          'msvs_settings': {
            'VCLibrarianTool': {
              'AdditionalDependencies': [
                'd3d9.lib',
                'gdi32.lib',
                'strmiids.lib',
                'winmm.lib',
              ],
            },
          },
        }],
        ['OS=="mac"', {
          'sources': [
            'media/devices/macdeviceinfo.cc',
            'media/devices/macdevicemanager.cc',
            'media/devices/macdevicemanager.h',
            'media/devices/macdevicemanagermm.mm',
          ],
          'conditions': [
            # TODO(hughv):  Investigate if this is needed.
            [ 'libjingle_objc != 1', {
              'sources': [
                'media/devices/carbonvideorenderer.cc',
                'media/devices/carbonvideorenderer.h',
              ],
            }],
          ],
          'xcode_settings': {
            'WARNING_CFLAGS': [
              # TODO(ronghuawu): Update macdevicemanager.cc to stop using
              # deprecated functions and remove this flag.
              '-Wno-deprecated-declarations',
            ],
          },
          'link_settings': {
            'xcode_settings': {
              'OTHER_LDFLAGS': [
                '-framework Cocoa',
                '-framework CoreAudio',
                '-framework CoreVideo',
                '-framework OpenGL',
                '-framework QTKit',
              ],
            },
          },
        }],
        ['OS=="ios"', {
          'sources': [
            'media/devices/iosdeviceinfo.cc',
            'media/devices/mobiledevicemanager.cc',
          ],
          'include_dirs': [
            # TODO(sjlee) Remove when vp8 is building for iOS.  vp8 pulls in
            # libjpeg which pulls in libyuv which currently disabled.
            '../third_party/libyuv/include',
          ],
        }],
        ['OS=="android"', {
          'sources': [
            'media/devices/mobiledevicemanager.cc',
          ],
        }],
      ],
    },  # target libjingle_media
    {
      'target_name': 'libjingle_p2p',
      'type': 'static_library',
      'dependencies': [
        '<(DEPTH)/third_party/libsrtp/libsrtp.gyp:libsrtp',
        'libjingle',
        'libjingle_media',
      ],
      'include_dirs': [
        '<(DEPTH)/testing/gtest/include',
      ],
      'direct_dependent_settings': {
        'include_dirs': [
          '<(DEPTH)/testing/gtest/include',
        ],
      },
      'defines': [
        # TODO(ronghuawu): enable SCTP when it's ready.
        # 'HAVE_SCTP',
      ],
      'sources': [
        'p2p/asyncstuntcpsocket.cc',
        'p2p/asyncstuntcpsocket.h',
        'p2p/basicpacketsocketfactory.cc',
        'p2p/basicpacketsocketfactory.h',
        'p2p/candidate.h',
        'p2p/common.h',
        'p2p/constants.cc',
        'p2p/constants.h',
        'p2p/dtlstransportchannel.cc',
        'p2p/dtlstransportchannel.h',
        'p2p/p2ptransport.cc',
        'p2p/p2ptransport.h',
        'p2p/p2ptransportchannel.cc',
        'p2p/p2ptransportchannel.h',
        'p2p/packetsocketfactory.h',
        'p2p/parsing.cc',
        'p2p/parsing.h',
        'p2p/port.cc',
        'p2p/port.h',
        'p2p/portallocator.cc',
        'p2p/portallocator.h',
        'p2p/portallocatorsessionproxy.cc',
        'p2p/portallocatorsessionproxy.h',
        'p2p/portinterface.h',
        'p2p/portproxy.cc',
        'p2p/portproxy.h',
        'p2p/pseudotcp.cc',
        'p2p/pseudotcp.h',
        'p2p/rawtransport.cc',
        'p2p/rawtransport.h',
        'p2p/rawtransportchannel.cc',
        'p2p/rawtransportchannel.h',
        'p2p/relayport.cc',
        'p2p/relayport.h',
        'p2p/relayserver.cc',
        'p2p/relayserver.h',
        'p2p/session.cc',
        'p2p/session.h',
        'p2p/sessionclient.h',
        'p2p/sessiondescription.cc',
        'p2p/sessiondescription.h',
        'p2p/sessionid.h',
        'p2p/sessionmanager.cc',
        'p2p/sessionmanager.h',
        'p2p/sessionmessages.cc',
        'p2p/sessionmessages.h',
        'p2p/stun.cc',
        'p2p/stun.h',
        'p2p/stunport.cc',
        'p2p/stunport.h',
        'p2p/stunrequest.cc',
        'p2p/stunrequest.h',
        'p2p/stunserver.cc',
        'p2p/stunserver.h',
        'p2p/tcpport.cc',
        'p2p/tcpport.h',
        'p2p/transport.cc',
        'p2p/transport.h',
        'p2p/transportchannel.cc',
        'p2p/transportchannel.h',
        'p2p/transportchannelimpl.h',
        'p2p/transportchannelproxy.cc',
        'p2p/transportchannelproxy.h',
        'p2p/transportdescription.h',
        'p2p/transportdescriptionfactory.cc',
        'p2p/transportdescriptionfactory.h',
        'p2p/transportinfo.h',
        'p2p/turnport.cc',
        'p2p/turnport.h',
        'p2p/turnserver.cc',
        'p2p/turnserver.h',
        'p2p/udpport.h',
        'p2p/client/autoportallocator.h',
        'p2p/client/basicportallocator.cc',
        'p2p/client/basicportallocator.h',
        'p2p/client/connectivitychecker.cc',
        'p2p/client/connectivitychecker.h',
        'p2p/client/httpportallocator.cc',
        'p2p/client/httpportallocator.h',
        'p2p/client/sessionmanagertask.h',
        'p2p/client/sessionsendtask.h',
        'p2p/client/socketmonitor.cc',
        'p2p/client/socketmonitor.h',
        'session/tunnel/pseudotcpchannel.cc',
        'session/tunnel/pseudotcpchannel.h',
        'session/tunnel/tunnelsessionclient.cc',
        'session/tunnel/tunnelsessionclient.h',
        'session/tunnel/securetunnelsessionclient.cc',
        'session/tunnel/securetunnelsessionclient.h',
        'session/media/audiomonitor.cc',
        'session/media/audiomonitor.h',
        'session/media/call.cc',
        'session/media/call.h',
        'session/media/channel.cc',
        'session/media/channel.h',
        'session/media/channelmanager.cc',
        'session/media/channelmanager.h',
        'session/media/currentspeakermonitor.cc',
        'session/media/currentspeakermonitor.h',
        'session/media/mediamessages.cc',
        'session/media/mediamessages.h',
        'session/media/mediamonitor.cc',
        'session/media/mediamonitor.h',
        'session/media/mediarecorder.cc',
        'session/media/mediarecorder.h',
        'session/media/mediasession.cc',
        'session/media/mediasession.h',
        'session/media/mediasessionclient.cc',
        'session/media/mediasessionclient.h',
        'session/media/mediasink.h',
        'session/media/rtcpmuxfilter.cc',
        'session/media/rtcpmuxfilter.h',
        'session/media/soundclip.cc',
        'session/media/soundclip.h',
        'session/media/srtpfilter.cc',
        'session/media/srtpfilter.h',
        'session/media/ssrcmuxfilter.cc',
        'session/media/ssrcmuxfilter.h',
        'session/media/typingmonitor.cc',
        'session/media/typingmonitor.h',
        'session/media/voicechannel.h',
      ],
    },  # target libjingle_p2p
    {
      'target_name': 'libjingle_peerconnection',
      'type': 'static_library',
      'dependencies': [
        'libjingle',
        'libjingle_media',
        'libjingle_p2p',
      ],
      'sources': [
        'app/webrtc/audiotrack.cc',
        'app/webrtc/audiotrack.h',
        'app/webrtc/audiotrackrenderer.cc',
        'app/webrtc/audiotrackrenderer.h',
        'app/webrtc/datachannel.cc',
        'app/webrtc/datachannel.h',
        'app/webrtc/datachannelinterface.h',
        'app/webrtc/dtmfsender.cc',
        'app/webrtc/dtmfsender.h',
        'app/webrtc/dtmfsenderinterface.h',
        'app/webrtc/fakeportallocatorfactory.h',
        'app/webrtc/jsep.h',
        'app/webrtc/jsepicecandidate.cc',
        'app/webrtc/jsepicecandidate.h',
        'app/webrtc/jsepsessiondescription.cc',
        'app/webrtc/jsepsessiondescription.h',
        'app/webrtc/localaudiosource.cc',
        'app/webrtc/localaudiosource.h',
        'app/webrtc/localvideosource.cc',
        'app/webrtc/localvideosource.h',
        'app/webrtc/mediaconstraintsinterface.cc',
        'app/webrtc/mediaconstraintsinterface.h',
        'app/webrtc/mediastream.cc',
        'app/webrtc/mediastream.h',
        'app/webrtc/mediastreamhandler.cc',
        'app/webrtc/mediastreamhandler.h',
        'app/webrtc/mediastreaminterface.h',
        'app/webrtc/mediastreamprovider.h',
        'app/webrtc/mediastreamproxy.h',
        'app/webrtc/mediastreamsignaling.cc',
        'app/webrtc/mediastreamsignaling.h',
        'app/webrtc/mediastreamtrack.h',
        'app/webrtc/mediastreamtrackproxy.h',
        'app/webrtc/notifier.h',
        'app/webrtc/peerconnection.cc',
        'app/webrtc/peerconnection.h',
        'app/webrtc/peerconnectionfactory.cc',
        'app/webrtc/peerconnectionfactory.h',
        'app/webrtc/peerconnectioninterface.h',
        'app/webrtc/peerconnectionproxy.h',
        'app/webrtc/portallocatorfactory.cc',
        'app/webrtc/portallocatorfactory.h',
        'app/webrtc/proxy.h',
        'app/webrtc/statscollector.cc',
        'app/webrtc/statscollector.h',
        'app/webrtc/statstypes.h',
        'app/webrtc/streamcollection.h',
        'app/webrtc/videosourceinterface.h',
        'app/webrtc/videosourceproxy.h',
        'app/webrtc/videotrack.cc',
        'app/webrtc/videotrack.h',
        'app/webrtc/videotrackrenderers.cc',
        'app/webrtc/videotrackrenderers.h',
        'app/webrtc/webrtcsdp.cc',
        'app/webrtc/webrtcsdp.h',
        'app/webrtc/webrtcsession.cc',
        'app/webrtc/webrtcsession.h',
      ],
    },  # target libjingle_peerconnection
  ],
}
