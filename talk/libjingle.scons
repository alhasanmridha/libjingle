import talk
Import("env")

talk.Library(env, name = "expat",
             cppdefines = [
               "XML_STATIC",
             ],
             srcs = [
               "third_party/expat-2.0.1/lib/xmlparse.c",
               "third_party/expat-2.0.1/lib/xmlrole.c",
               "third_party/expat-2.0.1/lib/xmltok.c",
             ],
             includedirs = [
               "third_party/expat-2.0.1/lib",
             ],
             win_cppdefines = [
               "COMPILED_FROM_DSP",
             ],
             posix_cppdefines = [
               "HAVE_EXPAT_CONFIG_H",
             ],
)
talk.Library(env, name = "gunit",
             srcs = [
               "testing/gtest/src/gtest-all.cc",
             ],
             includedirs = [
               "testing/gtest/include",
               "third_party/expat-2.0.1/lib",
               "third_party/srtp",
               "testing/gtest",
             ],
             cppdefines = [
               "EXPAT_RELATIVE_PATH",
               "GTEST_RELATIVE_PATH",
               "SRTP_RELATIVE_PATH",
             ],
)
talk.Library(env, name = "srtp",
             srcs = [
               "third_party/srtp/crypto/cipher/aes.c",
               "third_party/srtp/crypto/cipher/aes_cbc.c",
               "third_party/srtp/crypto/cipher/aes_icm.c",
               "third_party/srtp/crypto/cipher/cipher.c",
               "third_party/srtp/crypto/cipher/null_cipher.c",
               "third_party/srtp/crypto/hash/auth.c",
               "third_party/srtp/crypto/hash/hmac.c",
               "third_party/srtp/crypto/hash/null_auth.c",
               "third_party/srtp/crypto/hash/sha1.c",
               "third_party/srtp/crypto/replay/rdb.c",
               "third_party/srtp/crypto/replay/rdbx.c",
               "third_party/srtp/crypto/replay/ut_sim.c",
               "third_party/srtp/crypto/math/datatypes.c",
               "third_party/srtp/crypto/math/stat.c",
               "third_party/srtp/crypto/kernel/alloc.c",
               "third_party/srtp/crypto/kernel/crypto_kernel.c",
               "third_party/srtp/crypto/kernel/err.c",
               "third_party/srtp/crypto/kernel/key.c",
               "third_party/srtp/crypto/rng/ctr_prng.c",
               "third_party/srtp/crypto/rng/rand_source.c",
               "third_party/srtp/srtp/ekt.c",
               "third_party/srtp/srtp/srtp.c",
             ],
             includedirs = [
               "third_party/srtp/include",
               "third_party/srtp/crypto/include",
             ],
             win_ccflags = [
               "/wd4701",
               "/wd4702",
             ],
)
# Set up the SSL/TLS includes
if 'NSS_BUILD_PLATFORM' in env['ENV']:
             SSL_INCLUDES = [
               "third_party/mozilla/dist/public/nss",
               "third_party/mozilla/dist/" + env['ENV']['NSS_BUILD_PLATFORM']+ "/include"
             ]
             SSL_LIBS = [
               "ssl3",
               "nss3",
               "nssutil3",
               "plc4",
               "plds4",
               "nspr4",
             ]
else:
             SSL_INCLUDES = ["third_party/openssl/include"]
             SSL_LIBS = ["crypto", "ssl"]

talk.Library(env, name = "jingle",
             lin_packages = [
               "x11",
               "xcomposite",
               "xrender",
             ],
             lin_srcs = [
               "latebindingsymboltable.cc",
               "latebindingsymboltable.h.def",
               "latebindingsymboltable.cc.def",
               "linux.cc",
               "linuxfdwalk.c",
               "linuxwindowpicker.cc",
               "media/devices/libudevsymboltable.cc",
               "media/devices/linuxdeviceinfo.cc",
               "media/devices/linuxdevicemanager.cc",
               "media/devices/v4llookup.cc",
               "sound/alsasoundsystem.cc",
               "sound/alsasymboltable.cc",
               "sound/linuxsoundsystem.cc",
               "sound/pulseaudiosoundsystem.cc",
               "sound/pulseaudiosymboltable.cc",
             ],
             dependent_target_settings = {
               'lin_libs': [
                 "dl",
                 "pthread",
                 "rt",
                 "gthread-2.0",
               ],
               'mac_libs': SSL_LIBS,
               'win_libs': [
                 "winmm.lib",
               ],
             },
             mac_srcs = [
               "macasyncsocket.cc",
               "maccocoasocketserver.mm",
               "maccocoathreadhelper.mm",
               "macconversion.cc",
               "macsocketserver.cc",
               "macutils.cc",
               "macwindowpicker.cc",
               "scoped_autorelease_pool.mm",
               "media/devices/carbonvideorenderer.cc",
               "media/devices/macdeviceinfo.cc",
               "media/devices/macdevicemanager.cc",
               "media/devices/macdevicemanagermm.mm",
             ],
             posix_srcs = [
               "unixfilesystem.cc",
               "posix.cc",
             ],
             linphone_srcs = [
               "media/other/linphonemediaengine.cc",
             ],
             cppdefines = [
               "FEATURE_ENABLE_VOICEMAIL",
               "EXPAT_RELATIVE_PATH",
               "GTEST_RELATIVE_PATH",
               "SRTP_RELATIVE_PATH",
               "XML_STATIC",
             ],
             srcs = [
               "asyncfile.cc",
               "asynchttprequest.cc",
               "asyncsocket.cc",
               "asynctcpsocket.cc",
               "asyncudpsocket.cc",
               "autodetectproxy.cc",
               "bandwidthsmoother.cc",
               "base64.cc",
               "basicpacketsocketfactory.cc",
               "bytebuffer.cc",
               "checks.cc",
               "common.cc",
               "cpumonitor.cc",
               "crc32.cc",
               "diskcache.cc",
               "event.cc",
               "filelock.cc",
               "fileutils.cc",
               "firewallsocketserver.cc",
               "flags.cc",
               "helpers.cc",
               "host.cc",
               "httpbase.cc",
               "httpclient.cc",
               "httpcommon.cc",
               "httprequest.cc",
               "httpserver.cc",
               "ipaddress.cc",
               "logging.cc",
               "md5.cc",
               "messagedigest.cc",
               "messagehandler.cc",
               "messagequeue.cc",
               "multipart.cc",
               "natserver.cc",
               "natsocketfactory.cc",
               "nattypes.cc",
               "nethelpers.cc",
               "network.cc",
               "nssidentity.cc",
               "nssstreamadapter.cc",
               "openssladapter.cc",
               "openssldigest.cc",
               "opensslidentity.cc",
               "opensslstreamadapter.cc",
               "optionsfile.cc",
               "pathutils.cc",
               "physicalsocketserver.cc",
               "profiler.cc",
               "proxydetect.cc",
               "proxyinfo.cc",
               "proxyserver.cc",
               "ratelimiter.cc",
               "ratetracker.cc",
               "sha1.cc",
               "sharedexclusivelock.cc",
               "signalthread.cc",
               "socketadapters.cc",
               "socketaddress.cc",
               "socketaddresspair.cc",
               "socketpool.cc",
               "socketstream.cc",
               "ssladapter.cc",
               "sslsocketfactory.cc",
               "sslidentity.cc",
               "sslstreamadapter.cc",
               "sslstreamadapterhelper.cc",
               "stream.cc",
               "stringencode.cc",
               "stringutils.cc",
               "systeminfo.cc",
               "task.cc",
               "taskparent.cc",
               "taskrunner.cc",
               "testclient.cc",
               "thread.cc",
               "timeutils.cc",
               "timing.cc",
               "transformadapter.cc",
               "urlencode.cc",
               "versionparsing.cc",
               "virtualsocketserver.cc",
               "worker.cc",
               "p2p/constants.cc",
               "p2p/dtlstransportchannel.cc",
               "p2p/p2ptransport.cc",
               "p2p/p2ptransportchannel.cc",
               "p2p/parsing.cc",
               "p2p/port.cc",
               "p2p/portallocator.cc",
               "p2p/portallocatorsessionproxy.cc",
               "p2p/portproxy.cc",
               "p2p/pseudotcp.cc",
               "p2p/relayport.cc",
               "p2p/relayserver.cc",
               "p2p/rawtransport.cc",
               "p2p/rawtransportchannel.cc",
               "p2p/session.cc",
               "p2p/sessiondescription.cc",
               "p2p/sessionmanager.cc",
               "p2p/sessionmessages.cc",
               "p2p/stun.cc",
               "p2p/stunport.cc",
               "p2p/stunrequest.cc",
               "p2p/stunserver.cc",
               "p2p/tcpport.cc",
               "p2p/transport.cc",
               "p2p/transportchannel.cc",
               "p2p/transportchannelproxy.cc",
               "p2p/transportdescriptionfactory.cc",
               "p2p/turnport.cc",
               "p2p/turnserver.cc",
               "p2p/client/basicportallocator.cc",
               "p2p/client/connectivitychecker.cc",
               "p2p/client/httpportallocator.cc",
               "p2p/client/socketmonitor.cc",
               "session/tunnel/pseudotcpchannel.cc",
               "session/tunnel/tunnelsessionclient.cc",
               "session/tunnel/securetunnelsessionclient.cc",
               "media/capturemanager.cc",
               "media/capturerenderadapter.cc",
               "media/codec.cc",
               "media/constants.cc",
               "media/cpuid.cc",
               "media/filemediaengine.cc",
               "media/hybridvideoengine.cc",
               "media/mediaengine.cc",
               "media/rtpdataengine.cc",
               "media/rtpdump.cc",
               "media/rtputils.cc",
               "media/streamparams.cc",
               "media/videoadapter.cc",
               "media/videocapturer.cc",
               "media/mutedvideocapturer.cc",
               "media/videocommon.cc",
               "media/videoframe.cc",
               "media/devices/devicemanager.cc",
               "media/devices/filevideocapturer.cc",
               "session/media/audiomonitor.cc",
               "session/media/call.cc",
               "session/media/channel.cc",
               "session/media/channelmanager.cc",
               "session/media/currentspeakermonitor.cc",
               "session/media/mediamessages.cc",
               "session/media/mediamonitor.cc",
               "session/media/mediarecorder.cc",
               "session/media/mediasession.cc",
               "session/media/mediasessionclient.cc",
               "session/media/rtcpmuxfilter.cc",
               "session/media/rtcpmuxfilter.cc",
               "session/media/soundclip.cc",
               "session/media/srtpfilter.cc",
               "session/media/ssrcmuxfilter.cc",
               "session/media/typingmonitor.cc",
               "sound/nullsoundsystem.cc",
               "sound/nullsoundsystemfactory.cc",
               "sound/platformsoundsystem.cc",
               "sound/platformsoundsystemfactory.cc",
               "sound/soundsysteminterface.cc",
               "sound/soundsystemproxy.cc",
               "xmllite/qname.cc",
               "xmllite/xmlbuilder.cc",
               "xmllite/xmlconstants.cc",
               "xmllite/xmlelement.cc",
               "xmllite/xmlnsstack.cc",
               "xmllite/xmlparser.cc",
               "xmllite/xmlprinter.cc",
               "xmpp/chatroommoduleimpl.cc",
               "xmpp/constants.cc",
               "xmpp/discoitemsquerytask.cc",
               "xmpp/hangoutpubsubclient.cc",
               "xmpp/iqtask.cc",
               "xmpp/jid.cc",
               "xmpp/jingleinfotask.cc",
               "xmpp/moduleimpl.cc",
               "xmpp/mucroomconfigtask.cc",
               "xmpp/mucroomdiscoverytask.cc",
               "xmpp/mucroomlookuptask.cc",
               "xmpp/mucroomuniquehangoutidtask.cc",
               "xmpp/pingtask.cc",
               "xmpp/presenceouttask.cc",
               "xmpp/presencereceivetask.cc",
               "xmpp/presencestatus.cc",
               "xmpp/pubsubclient.cc",
               "xmpp/pubsub_task.cc",
               "xmpp/pubsubtasks.cc",
               "xmpp/receivetask.cc",
               "xmpp/rostermoduleimpl.cc",
               "xmpp/saslmechanism.cc",
               "xmpp/xmppclient.cc",
               "xmpp/xmppengineimpl.cc",
               "xmpp/xmppengineimpl_iq.cc",
               "xmpp/xmpplogintask.cc",
               "xmpp/xmppstanzaparser.cc",
               "xmpp/xmpptask.cc",
               "xmpp/xmppauth.cc",
               "xmpp/xmpppump.cc",
               "xmpp/xmppsocket.cc",
               "xmpp/xmppthread.cc",
             ],
             includedirs = [
               "third_party/libudev",
               "third_party/expat-2.0.1/lib",
               "testing/gtest/include",
               "third_party/srtp/include",
               "third_party/srtp/crypto/include",
             ] + SSL_INCLUDES,
             win_srcs = [
               "diskcache_win32.cc",
               "schanneladapter.cc",
               "win32.cc",
               "win32regkey.cc",
               "win32filesystem.cc",
               "win32securityerrors.cc",
               "win32socketserver.cc",
               "win32socketinit.cc",
               "win32window.cc",
               "win32windowpicker.cc",
               "winfirewall.cc",
               "winping.cc",
               "media/devices/gdivideorenderer.cc",
               "media/devices/win32deviceinfo.cc",
               "media/devices/win32devicemanager.cc",
             ],
             mac_ccflags = [
               "-Wno-deprecated-declarations",
             ],
             extra_srcs = [
               "media/devices/dummydevicemanager.cc",
               "dbus.cc",
               "libdbusglibsymboltable.cc",
               "json.cc",
               "natserver_main.cc",
             ],
)
talk.Library(env, name = "videorenderer",
             lin_srcs = [
               "media/devices/gtkvideorenderer.cc",
             ],
             lin_packages = [
               "gobject-2.0",
               "gthread-2.0",
               "gtk+-2.0",
             ],
)
talk.Library(env, name = "unittest_main",
             libs = [
               "gunit",
             ],
             srcs = [
               "unittest_main.cc",
             ],
             includedirs = [
               "testing/gtest/include",
               "third_party/expat-2.0.1/lib",
               "third_party/srtp",
               "testing/gtest",
             ],
             cppdefines = [
               "EXPAT_RELATIVE_PATH",
               "GTEST_RELATIVE_PATH",
               "SRTP_RELATIVE_PATH",
             ],
)
talk.App(env, name = "login",
         libs = [
           "jingle",
           "expat",
         ],
         srcs = [
           "examples/login/login_main.cc",
         ],
         posix_libs = SSL_LIBS,
         lin_libs = [
           "videorenderer",
         ],
)
talk.App(env, name = "chat",
         libs = [
           "jingle",
           "expat",
         ],
         srcs = [
           "examples/chat/chatapp.cc",
           "examples/chat/chat_main.cc",
           "examples/chat/consoletask.cc",
           "examples/chat/textchatreceivetask.cc",
           "examples/chat/textchatsendtask.cc",
         ],
         posix_libs = SSL_LIBS,
)
talk.App(env, name = "call",
         mac_frameworks = [
           "AudioToolbox",
           "AudioUnit",
           "Cocoa",
           "CoreAudio",
           "CoreFoundation",
           "IOKit",
           "QTKit",
           "QuickTime",
         ],
         win_libs = [
           "d3d9.lib",
           "gdi32.lib",
           "powrprof.lib",
           "strmiids.lib",
           "winmm.lib",
         ],
         posix_libs = SSL_LIBS,
         lin_libs = [
           "videorenderer",
         ],
         srcs = [
           "examples/call/call_main.cc",
           "examples/call/callclient.cc",
           "examples/call/console.cc",
           "examples/call/friendinvitesendtask.cc",
           "examples/call/mediaenginefactory.cc",
           "examples/call/mucinviterecvtask.cc",
           "examples/call/mucinvitesendtask.cc",
           "examples/call/presencepushtask.cc",
         ],
         libs = [
           "jingle",
           "expat",
           "srtp",
         ],
)
talk.App(env, name = "relayserver",
         libs = [
           "jingle",
         ],
         srcs = [
           "p2p/relayserver_main.cc",
         ],
)
talk.App(env, name = "stunserver",
         libs = [
           "jingle",
         ],
         srcs = [
           "p2p/stunserver_main.cc",
         ],
)
talk.App(env, name = "turnserver",
         lin_libs = [
           "crypto",
           "ssl",
         ],
         srcs = [
           "p2p/turnserver_main.cc",
         ],
         libs = [
           "jingle",
         ],
)
talk.Unittest(env, name = "base",
              lin_srcs = [
                "latebindingsymboltable_unittest.cc",
                "linux_unittest.cc",
                "linuxfdwalk_unittest.cc",
              ],
              mac_srcs = [
                "macsocketserver_unittest.cc",
                "macutils_unittest.cc",
                "macwindowpicker_unittest.cc",
              ],
              posix_srcs = [
                "sslidentity_unittest.cc",
                "sslstreamadapter_unittest.cc",
              ],
              cppdefines = [
                "EXPAT_RELATIVE_PATH",
                "GTEST_RELATIVE_PATH",
                "SRTP_RELATIVE_PATH",
              ],
              srcs = [
                "asynchttprequest_unittest.cc",
                "atomicops_unittest.cc",
                "autodetectproxy_unittest.cc",
                "bandwidthsmoother_unittest.cc",
                "base64_unittest.cc",
                "basictypes_unittest.cc",
                "bind_unittest.cc",
                "buffer_unittest.cc",
                "bytebuffer_unittest.cc",
                "byteorder_unittest.cc",
                "cpumonitor_unittest.cc",
                "crc32_unittest.cc",
                "event_unittest.cc",
                "filelock_unittest.cc",
                "fileutils_unittest.cc",
                "helpers_unittest.cc",
                "host_unittest.cc",
                "httpbase_unittest.cc",
                "httpcommon_unittest.cc",
                "httpserver_unittest.cc",
                "ipaddress_unittest.cc",
                "logging_unittest.cc",
                "md5digest_unittest.cc",
                "messagedigest_unittest.cc",
                "messagequeue_unittest.cc",
                "multipart_unittest.cc",
                "nat_unittest.cc",
                "network_unittest.cc",
                "nullsocketserver_unittest.cc",
                "optionsfile_unittest.cc",
                "pathutils_unittest.cc",
                "physicalsocketserver_unittest.cc",
                "profiler_unittest.cc",
                "proxy_unittest.cc",
                "proxydetect_unittest.cc",
                "ratelimiter_unittest.cc",
                "ratetracker_unittest.cc",
                "referencecountedsingletonfactory_unittest.cc",
                "rollingaccumulator_unittest.cc",
                "sha1digest_unittest.cc",
                "sharedexclusivelock_unittest.cc",
                "signalthread_unittest.cc",
                "sigslot_unittest.cc",
                "socket_unittest.cc",
                "socketaddress_unittest.cc",
                "stream_unittest.cc",
                "stringencode_unittest.cc",
                "stringutils_unittest.cc",
                "systeminfo_unittest.cc",
                "task_unittest.cc",
                "testclient_unittest.cc",
                "thread_unittest.cc",
                "timeutils_unittest.cc",
                "urlencode_unittest.cc",
                "versionparsing_unittest.cc",
                "virtualsocket_unittest.cc",
                "windowpicker_unittest.cc",
              ],
              includedirs = [
                "testing/gtest/include",
                "third_party/expat-2.0.1/lib",
                "third_party/srtp",
                "testing/gtest",
              ],
              win_srcs = [
                "win32_unittest.cc",
                "win32regkey_unittest.cc",
                "win32socketserver_unittest.cc",
                "win32toolhelp_unittest.cc",
                "win32window_unittest.cc",
                "win32windowpicker_unittest.cc",
                "winfirewall_unittest.cc",
              ],
              libs = [
                "jingle",
              ],
              extra_srcs = [
                "dbus_unittest.cc",
                "json_unittest.cc",
                "linuxwindowpicker_unittest.cc",
              ],
)
talk.Unittest(env, name = "p2p",
              mac_FRAMEWORKS = [
                "Foundation",
                "IOKit",
                "QTKit",
              ],
              mac_libs = SSL_LIBS,
              cppdefines = [
                "EXPAT_RELATIVE_PATH",
                "GTEST_RELATIVE_PATH",
                "SRTP_RELATIVE_PATH",
              ],
              srcs = [
                "p2p/dtlstransportchannel_unittest.cc",
                "p2p/p2ptransportchannel_unittest.cc",
                "p2p/port_unittest.cc",
                "p2p/portallocatorsessionproxy_unittest.cc",
                "p2p/pseudotcp_unittest.cc",
                "p2p/relayport_unittest.cc",
                "p2p/relayserver_unittest.cc",
                "p2p/session_unittest.cc",
                "p2p/stun_unittest.cc",
                "p2p/stunport_unittest.cc",
                "p2p/stunrequest_unittest.cc",
                "p2p/stunserver_unittest.cc",
                "p2p/transport_unittest.cc",
                "p2p/transportdescriptionfactory_unittest.cc",
                "p2p/turnport_unittest.cc",
                "p2p/client/connectivitychecker_unittest.cc",
                "p2p/client/portallocator_unittest.cc",
              ],
              includedirs = [
                "testing/gtest/include",
                "third_party/expat-2.0.1/lib",
                "third_party/srtp",
                "testing/gtest",
              ],
              libs = [
                "jingle",
                "expat",
              ],
)
talk.Unittest(env, name = "media",
              win_libs = [
                "winmm.lib",
                "strmiids",
              ],
              cppdefines = [
                "EXPAT_RELATIVE_PATH",
                "GTEST_RELATIVE_PATH",
                "SRTP_RELATIVE_PATH",
              ],
              srcs = [
                "media/capturemanager_unittest.cc",
                "media/codec_unittest.cc",
                "media/filemediaengine_unittest.cc",
                "media/rtpdataengine_unittest.cc",
                "media/rtpdump_unittest.cc",
                "media/rtputils_unittest.cc",
                "media/testutils.cc",
                "media/videocapturer_unittest.cc",
                "media/videocommon_unittest.cc",
                "media/devices/devicemanager_unittest.cc",
                "media/devices/filevideocapturer_unittest.cc",
                "session/media/channel_unittest.cc",
                "session/media/channelmanager_unittest.cc",
                "session/media/currentspeakermonitor_unittest.cc",
                "session/media/mediarecorder_unittest.cc",
                "session/media/mediamessages_unittest.cc",
                "session/media/mediasession_unittest.cc",
                "session/media/mediasessionclient_unittest.cc",
                "session/media/rtcpmuxfilter_unittest.cc",
                "session/media/srtpfilter_unittest.cc",
                "session/media/ssrcmuxfilter_unittest.cc",
              ],
              includedirs = [
                "testing/gtest/include",
                "third_party/expat-2.0.1/lib",
                "third_party/srtp",
                "testing/gtest",
              ],
              libs = [
                "jingle",
                "expat",
                "srtp",
              ],
              extra_srcs = [
                "media/devices/dummydevicemanager_unittest.cc",
              ],
)
talk.Unittest(env, name = "sound",
              libs = [
                "jingle",
              ],
              srcs = [
                "sound/automaticallychosensoundsystem_unittest.cc",
              ],
              mac_libs = SSL_LIBS,

              includedirs = [
                "testing/gtest/include",
                "third_party/expat-2.0.1/lib",
                "third_party/srtp",
                "testing/gtest",
              ],
              cppdefines = [
                "EXPAT_RELATIVE_PATH",
                "GTEST_RELATIVE_PATH",
                "SRTP_RELATIVE_PATH",
              ],
)
talk.Unittest(env, name = "xmllite",
              libs = [
                "jingle",
                "expat",
              ],
              srcs = [
                "xmllite/qname_unittest.cc",
                "xmllite/xmlbuilder_unittest.cc",
                "xmllite/xmlelement_unittest.cc",
                "xmllite/xmlnsstack_unittest.cc",
                "xmllite/xmlparser_unittest.cc",
                "xmllite/xmlprinter_unittest.cc",
              ],
              mac_libs = SSL_LIBS,
              includedirs = [
                "testing/gtest/include",
                "third_party/expat-2.0.1/lib",
                "third_party/srtp",
                "testing/gtest",
              ],
              cppdefines = [
                "EXPAT_RELATIVE_PATH",
                "GTEST_RELATIVE_PATH",
                "SRTP_RELATIVE_PATH",
              ],
)
talk.Unittest(env, name = "xmpp",
              mac_libs = SSL_LIBS,
              cppdefines = [
                "EXPAT_RELATIVE_PATH",
                "GTEST_RELATIVE_PATH",
                "SRTP_RELATIVE_PATH",
              ],
              srcs = [
                "xmpp/hangoutpubsubclient_unittest.cc",
                "xmpp/jid_unittest.cc",
                "xmpp/mucroomconfigtask_unittest.cc",
                "xmpp/mucroomdiscoverytask_unittest.cc",
                "xmpp/mucroomlookuptask_unittest.cc",
                "xmpp/mucroomuniquehangoutidtask_unittest.cc",
                "xmpp/pingtask_unittest.cc",
                "xmpp/pubsubclient_unittest.cc",
                "xmpp/pubsubtasks_unittest.cc",
                "xmpp/util_unittest.cc",
                "xmpp/xmppengine_unittest.cc",
                "xmpp/xmpplogintask_unittest.cc",
                "xmpp/xmppstanzaparser_unittest.cc",
              ],
              includedirs = [
                "testing/gtest/include",
                "third_party/expat-2.0.1/lib",
                "third_party/srtp",
                "testing/gtest",
              ],
              libs = [
                "jingle",
                "expat",
              ],
              extra_srcs = [
                "xmpp/chatroommodule_unittest.cc",
                "xmpp/rostermodule_unittest.cc",
              ],
)
